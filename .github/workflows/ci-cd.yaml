name: Frontend CI/CD

on:
  push:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  tests_and_lint:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    name: Tests and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Run Linter
        run: npm run lint

      # - name: Run Tests
      #   run: npm run test -- --run --config vitest.config.ts

  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    name: Build
    runs-on: ubuntu-latest
    needs: tests_and_lint
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-node

      - name: Build Project
        run: npm run build
  deploy_frontend:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.base_ref == 'main'
    name: Deploy Frontend to Heroku (Docker)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Heroku Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.heroku.com
          username: _
          password: ${{ secrets.HEROKU_API_KEY }}

      - name: Build & Push image to Heroku Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: registry.heroku.com/${{ secrets.HEROKU_APP_NAME_FRONT }}/web
          build-args: |
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Release on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login
          heroku container:release web -a ${{ secrets.HEROKU_APP_NAME_FRONT }}
